[project]
name = "agentifyme"
dynamic = ["version"]
description = "Framework for building agentic workflows"
authors = [
    { name = "Arun Reddy", email = "arun@agentifyme.ai" }
]
dependencies = [
    "openai~=1.60",
    "tenacity~=8.5",
    "httpx~=0.27",
    "wrapt!=1.16",
    "pydantic~=2.9",
    "cloudpickle~=3.0",
    "joblib~=1.4",
    "environs~=11.0",
    "docstring-parser~=0.16",
    "together~=1.2",
    "jinja2~=3.1",
    "python-slugify~=8.0",
    "loguru~=0.7",
    "orjson~=3.10",
    "opentelemetry-api~=1.28",
    "opentelemetry-sdk~=1.28",
    "opentelemetry-exporter-otlp-proto-grpc~=1.28",
    "sentry-sdk~=2.18",
    "grpcio~=1.68",
    "protobuf>=4.25",
    "grpcio-tools~=1.68",
    "qdrant-client~=1.12",
    "pyyaml~=6.0",
    "googleapis-common-protos~=1.66",
    "opentelemetry-processor-baggage~=0.50",
    "opentelemetry-instrumentation~=0.50",
    "openinference-instrumentation-openai~=0.1",
    "groq~=0.15",
    "psutil~=6.1",
]
readme = "README.md"
requires-python = ">= 3.11"

[project.scripts]
agnt5 = "agentifyme.worker.entrypoint:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "ruff>=0.8.1",
    "pytest>=8.3.1",
    "coverage>=7.6.0",
    "pytest-cov>=5.0.0",
    "ipykernel>=6.29.5",
    "pytest-mock>=3.14.0",
    "pytest-asyncio>=0.23.8",
]


[tool.hatch.version]
path = "agentifyme/__init__.py"

[tool.hatch.metadata]
description = "Framework for building agentic workflows"
allow-direct-references = true
metadata-version = "2.1"


[tool.ruff.lint]
select = ["ALL"]

[tool.uv]
dev-dependencies = [
    "ruff>=0.8.1",
    "pytest>=8.3.1",
    "coverage>=7.6.0",
    "pytest-cov>=5.0.0",
    "ipykernel>=6.29.5",
    "pytest-mock>=3.14.0",
    "pytest-asyncio>=0.23.8",
    "pyright",
]
